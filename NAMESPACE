# Generated by roxygen2: do not edit by hand

S3method(controller,cpp)
S3method(controller,vectorize)
S3method(get_accepts,cpp)
S3method(get_accepts,naive)
S3method(get_accepts,vectorize)
S3method(get_proposals,cpp)
S3method(get_proposals,naive)
S3method(get_proposals,vectorize)
S3method(plot,envelope_class)
S3method(plot,rejection_sampler)
S3method(plot,wrapper_class)
S3method(plot_diff,envelope_class)
S3method(plot_target,envelope_class)
export(accept_prob_est_gauss)
export(adaptive_one_time_placement)
export(adaptive_placement)
export(add_density_to_plot)
export(autoplot)
export(bandwidth_silvermans_rule)
export(binning_cpp)
export(calculate_oracle_bw_epanechnikov)
export(create_log_envelope_density)
export(create_sampler_function)
export(d_log_target_density_vectorize)
export(density)
export(epanechnikov_kernel)
export(epanechnikov_kernel_cpp)
export(gaussian_kernel)
export(gaussian_kernel_cpp)
export(get_cv_bw)
export(get_gaussian_envelope)
export(get_log_affine_envelope)
export(get_log_alpha_prime)
export(get_optimal_parameters)
export(get_ucv_bw)
export(import_poisson_data)
export(is_an_evnelope)
export(kernel_cpp_epanechnikov)
export(kernel_cpp_epanechnikov_binning)
export(kernel_cpp_gaussian)
export(kernel_cpp_gaussian_binning)
export(log_target_density_vectorize)
export(log_unnormalized_gaussian_density)
export(perform_rejection_sampling)
export(rejection_sampler_wrapper)
import(Rcpp)
useDynLib(CompStatPackage)
